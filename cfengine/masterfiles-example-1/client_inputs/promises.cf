########################
# Client - promises.cf
########################

## Author:      FOXX (frozenfoxx@github.com)
## Date:        12/30/2010
## Description: this example is effectively the "control" script for CFengine.  It
##		calls all requisite bundles to actually run the program.  Failsafe.cf
##		is only used if this does not exist.

body common control
{
        bundlesequence => {
          "update",
          "executor",
          "monitor",
          "crontabs",
          "sudo",
          "ntp",
          "garbage_collection",
          "resolv",
          "cfbackup" # should be last
        };

        inputs => {
          "update.cf",
          "library.cf",
          "cfengine_stdlib.cf",
          "cf-monitord.cf",
          "cf-execd.cf",
          "crontabs.cf",
          "sudo.cf",
          "ntp.cf",
          "garbage_collection.cf",
          "resolv.cf",
          "cfbackup.cf"
        };
}

############################################
bundle common g
{
        vars: 
          "workdir" string =>           "/var/cfengine";
          "master_location" string =>   "${workdir}/masterfiles/client_inputs";
          "master_modules" string =>    "${workdir}/masterfiles/client_modules";

# Define lists of hosts
          "tier1_hosts" slist =>   {
            "server11", "server12", "server13", 
            "server14", "server15"
          };
          "tier2_hosts" slist =>   {
            "server21", "server22", "server23", "server24", "server25", "server26",
            "server27", "server28", "server29", "server291", "server292", "server293",
            "server294", "server295", "server296", "server297"
          };
          "tier3_hosts" slist =>      {
            "server31", "server32", "server33", "server34", "server35", "server36", "server37",
            "server38", "server39", "server391", "server392", "server393", "server394",
            "server395", "server396"
          };

# Define Master Policy Servers
          "phost" string =>             "cfmps.somedomain.net";

 	classes:
          "tier1" or =>	{ classmatch(canonify("$(tier1_hosts)")) };
          "tier2" or =>	{ classmatch(canonify("$(tier2_hosts)")) };
          "tier3" or =>	{ classmatch(canonify("$(tier3_hosts)")) };
}

############################################
body agent control
{
        # If default runtime is 5 mins we need this for long jobs
        ifelapsed => "15";

        # Do not rely on DNS
        skipidentify => "true";
}

#######################################################
body reporter control
{
        reports => { "all" };
        build_directory => "$(sys.workdir)/reports";
        report_output => "text";
        time_stamps => "true";
}
